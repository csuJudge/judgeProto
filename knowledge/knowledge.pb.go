// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v3.19.1
// source: knowledge.proto

package judgeProto

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryKnowledgeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`   // 页
	Limit         int32                  `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"` // 页大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryKnowledgeReq) Reset() {
	*x = QueryKnowledgeReq{}
	mi := &file_knowledge_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryKnowledgeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKnowledgeReq) ProtoMessage() {}

func (x *QueryKnowledgeReq) ProtoReflect() protoreflect.Message {
	mi := &file_knowledge_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKnowledgeReq.ProtoReflect.Descriptor instead.
func (*QueryKnowledgeReq) Descriptor() ([]byte, []int) {
	return file_knowledge_proto_rawDescGZIP(), []int{0}
}

func (x *QueryKnowledgeReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryKnowledgeReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type QueryKnowledgeRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Knowledge     []*Knowledge           `protobuf:"bytes,1,rep,name=knowledge,proto3" json:"knowledge,omitempty"` // 知识点
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryKnowledgeRsp) Reset() {
	*x = QueryKnowledgeRsp{}
	mi := &file_knowledge_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryKnowledgeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKnowledgeRsp) ProtoMessage() {}

func (x *QueryKnowledgeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_knowledge_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKnowledgeRsp.ProtoReflect.Descriptor instead.
func (*QueryKnowledgeRsp) Descriptor() ([]byte, []int) {
	return file_knowledge_proto_rawDescGZIP(), []int{1}
}

func (x *QueryKnowledgeRsp) GetKnowledge() []*Knowledge {
	if x != nil {
		return x.Knowledge
	}
	return nil
}

type AddKnowledgeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KnowledgeName string                 `protobuf:"bytes,1,opt,name=KnowledgeName,proto3" json:"KnowledgeName,omitempty"`
	UserID        int32                  `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddKnowledgeReq) Reset() {
	*x = AddKnowledgeReq{}
	mi := &file_knowledge_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddKnowledgeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddKnowledgeReq) ProtoMessage() {}

func (x *AddKnowledgeReq) ProtoReflect() protoreflect.Message {
	mi := &file_knowledge_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddKnowledgeReq.ProtoReflect.Descriptor instead.
func (*AddKnowledgeReq) Descriptor() ([]byte, []int) {
	return file_knowledge_proto_rawDescGZIP(), []int{2}
}

func (x *AddKnowledgeReq) GetKnowledgeName() string {
	if x != nil {
		return x.KnowledgeName
	}
	return ""
}

func (x *AddKnowledgeReq) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type AddKnowledgeRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	RetCode       int32                  `protobuf:"varint,2,opt,name=retCode,proto3" json:"retCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddKnowledgeRsp) Reset() {
	*x = AddKnowledgeRsp{}
	mi := &file_knowledge_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddKnowledgeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddKnowledgeRsp) ProtoMessage() {}

func (x *AddKnowledgeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_knowledge_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddKnowledgeRsp.ProtoReflect.Descriptor instead.
func (*AddKnowledgeRsp) Descriptor() ([]byte, []int) {
	return file_knowledge_proto_rawDescGZIP(), []int{3}
}

func (x *AddKnowledgeRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddKnowledgeRsp) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

type Knowledge struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KnowledgeID   int32                  `protobuf:"varint,1,opt,name=KnowledgeID,proto3" json:"KnowledgeID,omitempty"`
	KnowledgeName string                 `protobuf:"bytes,2,opt,name=KnowledgeName,proto3" json:"KnowledgeName,omitempty"`
	Creator       string                 `protobuf:"bytes,3,opt,name=Creator,proto3" json:"Creator,omitempty"`
	CreateTime    string                 `protobuf:"bytes,4,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	Enable        string                 `protobuf:"bytes,5,opt,name=Enable,proto3" json:"Enable,omitempty"`
	Weight        string                 `protobuf:"bytes,6,opt,name=Weight,proto3" json:"Weight,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Knowledge) Reset() {
	*x = Knowledge{}
	mi := &file_knowledge_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Knowledge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Knowledge) ProtoMessage() {}

func (x *Knowledge) ProtoReflect() protoreflect.Message {
	mi := &file_knowledge_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Knowledge.ProtoReflect.Descriptor instead.
func (*Knowledge) Descriptor() ([]byte, []int) {
	return file_knowledge_proto_rawDescGZIP(), []int{4}
}

func (x *Knowledge) GetKnowledgeID() int32 {
	if x != nil {
		return x.KnowledgeID
	}
	return 0
}

func (x *Knowledge) GetKnowledgeName() string {
	if x != nil {
		return x.KnowledgeName
	}
	return ""
}

func (x *Knowledge) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Knowledge) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Knowledge) GetEnable() string {
	if x != nil {
		return x.Enable
	}
	return ""
}

func (x *Knowledge) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

var File_knowledge_proto protoreflect.FileDescriptor

var file_knowledge_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x6f, 0x6a, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x22,
	0x3d, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x4a,
	0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x52, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x09, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6a, 0x2e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52,
	0x09, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x22, 0x4f, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a,
	0x0d, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x45, 0x0a, 0x0f, 0x41,
	0x64, 0x64, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x09, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x32, 0xb7, 0x01, 0x0a, 0x0f, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x6f, 0x6a, 0x2e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6f, 0x6a, 0x2e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0c,
	0x41, 0x64, 0x64, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x6f,
	0x6a, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6f, 0x6a,
	0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x42, 0x20, 0x5a, 0x1e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x73, 0x75, 0x4a, 0x75,
	0x64, 0x67, 0x65, 0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_knowledge_proto_rawDescOnce sync.Once
	file_knowledge_proto_rawDescData = file_knowledge_proto_rawDesc
)

func file_knowledge_proto_rawDescGZIP() []byte {
	file_knowledge_proto_rawDescOnce.Do(func() {
		file_knowledge_proto_rawDescData = protoimpl.X.CompressGZIP(file_knowledge_proto_rawDescData)
	})
	return file_knowledge_proto_rawDescData
}

var file_knowledge_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_knowledge_proto_goTypes = []any{
	(*QueryKnowledgeReq)(nil), // 0: oj.knowledge.QueryKnowledgeReq
	(*QueryKnowledgeRsp)(nil), // 1: oj.knowledge.QueryKnowledgeRsp
	(*AddKnowledgeReq)(nil),   // 2: oj.knowledge.AddKnowledgeReq
	(*AddKnowledgeRsp)(nil),   // 3: oj.knowledge.AddKnowledgeRsp
	(*Knowledge)(nil),         // 4: oj.knowledge.Knowledge
}
var file_knowledge_proto_depIdxs = []int32{
	4, // 0: oj.knowledge.QueryKnowledgeRsp.knowledge:type_name -> oj.knowledge.Knowledge
	0, // 1: oj.knowledge.KnowledgeServer.QueryKnowledge:input_type -> oj.knowledge.QueryKnowledgeReq
	2, // 2: oj.knowledge.KnowledgeServer.AddKnowledge:input_type -> oj.knowledge.AddKnowledgeReq
	1, // 3: oj.knowledge.KnowledgeServer.QueryKnowledge:output_type -> oj.knowledge.QueryKnowledgeRsp
	3, // 4: oj.knowledge.KnowledgeServer.AddKnowledge:output_type -> oj.knowledge.AddKnowledgeRsp
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_knowledge_proto_init() }
func file_knowledge_proto_init() {
	if File_knowledge_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_knowledge_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_knowledge_proto_goTypes,
		DependencyIndexes: file_knowledge_proto_depIdxs,
		MessageInfos:      file_knowledge_proto_msgTypes,
	}.Build()
	File_knowledge_proto = out.File
	file_knowledge_proto_rawDesc = nil
	file_knowledge_proto_goTypes = nil
	file_knowledge_proto_depIdxs = nil
}
