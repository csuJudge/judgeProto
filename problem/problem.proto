syntax            = "proto3";
option go_package = "github.com/csuJudge/judgeProto/problem";

package oj.problem;

service ProblemServer {
    // QueryProblem 查询题目
    rpc QueryProblem(QueryProblemReq) returns (QueryProblemRsp) {}
    // AddProblem 添加题目
    rpc AddProblem(AddProblemReq) returns (CommonRsp) {}
    // QueryProblemDataList 查询题目样例
    rpc QueryProblemDataList(QueryProblemDataListReq) returns (QueryProblemDataListRsp) {}
    // QueryProblemData 查询题目样例数据
    rpc QueryProblemData(QueryProblemDataReq) returns (QueryProblemDataRsp) {}
    // AddProblemData 添加题目样例数据
    rpc AddProblemData(AddProblemDataReq) returns (CommonRsp) {}
    // UpdateProblemData 更新题目样例数据
    rpc UpdateProblemData(UpdateProblemDataReq) returns (CommonRsp) {}
    // DeleteProblemData 删除题目样例数据
    rpc DeleteProblemData(DeleteProblemDataReq) returns (CommonRsp) {}
}

message DeleteProblemDataReq{
    int32 problemID = 1; // 问题编号
    string sampleName = 2;   // 样例名
}

message UpdateProblemDataReq{
    int32 problemID = 1; // 问题编号
    string sampleName = 2;   // 样例名
    string input = 3; // 输入
    string output = 4; // 输出
}

message CommonRsp{
    string message  = 1; // 返回信息
    int64 code      = 2; // 返回码
}

message AddProblemDataReq{
    int32 problemID = 1; // 问题编号
    int32 userID = 2;   // 用户编号
}


message QueryProblemDataReq{
    int32 problemID = 1; // 问题编号
    string sampleName = 2; // 样例名称
}

message QueryProblemDataRsp{
    string input = 1; // 输入
    string output = 2; // 输出
}

message QueryProblemDataListReq{
    int32 problemID = 1; // 问题编号
}

message QueryProblemDataListRsp{
    string message  = 1; // 返回信息
    int64 code      = 2; // 返回码
    repeated Sample sample = 3; // 样例列表
}

message Sample {
    string sampleName = 1; // 样例名称
    string sampleInput = 2; // 样例输入
    string sampleOutput = 3; // 样例输出
}

message QueryProblemReq {
    int32 problemID = 1;  // 问题编号
    int32 userID    = 2;  // 用户编号
    int32 contestID = 3;  // 作业编号
}

message QueryProblemRsp {
    string message  = 1; // 返回信息
    int64 code      = 2; // 返回码
    Problem problem = 3;
}

message Problem {
    int32 problemID           = 1;
    string ProblemName        = 2;
    string ProblemDescription = 3;
    string ProblemHint        = 4;
    int32 Solved              = 5;
    int32 Submission          = 6;
    string InputDescription   = 7;
    string OutputDescription  = 8;
    string ProblemInput       = 9;
    string ProblemOutput      = 10;
    int32 TimeLimit           = 11;
    int32 MemoryLimit         = 12;
    string Knowledges         = 13;
    int32 Enable              = 14;
    int32 Difficulty          = 15;
}

message AddProblemReq {
    int32 UserID    = 1;
    Problem problem = 2;
}
