syntax            = "proto3";
option go_package = "github.com/csuJudge/judgeProto/problem";

package oj.problem;

service ProblemServer {
    // QueryProblem 查询题目
    rpc QueryProblem(QueryProblemReq) returns (QueryProblemRsp) {}
    // AddProblem 添加题目
    rpc AddProblem(AddProblemReq) returns (CommonRsp) {}
    // UpdateProblemStatus 更新题目状态
    rpc UpdateProblemStatus(UpdateProblemStatusReq) returns (CommonRsp) {}
    // QueryProblemList 查询题目列表
    rpc QueryProblemList(QueryProblemListReq) returns (QueryProblemListRsp) {}
    // QueryProblemName 查询题目名称
    rpc QueryProblemName(QueryProblemNameReq) returns (QueryProblemListRsp) {}
    // updateProblemVisitNumber 更新题目访问数据
    rpc updateProblemVisitNumber(updateProblemVisitNumberReq) returns (CommonRsp) {}
    // QueryProblemDataList 查询题目样例
    rpc QueryProblemDataList(QueryProblemDataListReq) returns (QueryProblemDataListRsp) {}
    // QueryProblemData 查询题目样例数据
    rpc QueryProblemData(QueryProblemDataReq) returns (QueryProblemDataRsp) {}
    // AddProblemData 添加题目样例数据
    rpc AddProblemData(AddProblemDataReq) returns (CommonRsp) {}
    // UpdateProblemData 更新题目样例数据
    rpc UpdateProblemData(UpdateProblemDataReq) returns (CommonRsp) {}
    // DeleteProblemData 删除题目样例数据
    rpc DeleteProblemData(DeleteProblemDataReq) returns (CommonRsp) {}
    // QueryContestProblem 查询作业的题目数据
    rpc QueryContestProblem(QueryContestProblemReq) returns (QueryContestProblemReqRsp) {}
}

message updateProblemVisitNumberReq {
    int32 userID    = 1;  // 用户编号
    int32 problemID = 2;  // 问题编号
}

message QueryProblemNameReq {
    int32 userID = 1;  // 用户编号
}

message QueryProblemListReq {
    int32 page   = 1;  // 页
    int32 limit  = 2;  // 页大小
    int32 userID = 3;  // 用户编号
}

message QueryProblemListRsp {
    string message           = 1;  // 返回信息
    int32 code               = 2;  // 返回码
    repeated Problem problem = 3;  // 问题列表
    int32 count              = 4;  // 总数
}

message QueryContestProblemReq {
    int32 contestID = 1;  // 作业编号
}

message QueryContestProblemReqRsp {
    string message                   = 1;  // 返回信息
    int32 code                       = 2;  // 返回码
    repeated ContestProblem problems = 3;  //  作业的题目列表
}

message ContestProblem {
    int32 problemID    = 1;  // 题目编号
    string problemName = 2;  // 题目名称
    int32 isDone       = 3;  // 是否做完
    int32 solved       = 4;  // 解决
    int32 submission   = 5;  // 提交
    int32 difficulty   = 6;  // 难度
}

message UpdateProblemStatusReq {
    int32 userID    = 1;  // 用户主键
    int32 problemID = 2;  // 题目主键
    int32 status    = 3;  // 状态
}

message DeleteProblemDataReq {
    int32 problemID   = 1;  // 问题编号
    string sampleName = 2;  // 样例名
}

message UpdateProblemDataReq {
    int32 problemID   = 1;  // 问题编号
    string sampleName = 2;  // 样例名
    string input      = 3;  // 输入
    string output     = 4;  // 输出
}

message CommonRsp {
    string message = 1;  // 返回信息
    int32 code     = 2;  // 返回码
}

message AddProblemDataReq {
    int32 problemID = 1;  // 问题编号
    int32 userID    = 2;  // 用户编号
}

message QueryProblemDataReq {
    int32 problemID   = 1;  // 问题编号
    string sampleName = 2;  // 样例名称
}

message QueryProblemDataRsp {
    string message = 1;  // 返回信息
    int32 code     = 2;  // 返回码
    string input   = 3;  // 输入
    string output  = 4;  // 输出
}

message QueryProblemDataListReq {
    int32 problemID = 1;  // 问题编号
}

message QueryProblemDataListRsp {
    string message         = 1;  // 返回信息
    int32 code             = 2;  // 返回码
    repeated Sample sample = 3;  // 样例列表
}

message Sample {
    string sampleName   = 1;  // 样例名称
    string sampleInput  = 2;  // 样例输入
    string sampleOutput = 3;  // 样例输出
}

message QueryProblemReq {
    int32 problemID = 1;  // 问题编号
    int32 userID    = 2;  // 用户编号
    int32 contestID = 3;  // 作业编号
}

message QueryProblemRsp {
    string message  = 1;  // 返回信息
    int32 code      = 2;  // 返回码
    Problem problem = 3;  // 问题
}

message Problem {
    int32 problemID           = 1;
    string ProblemName        = 2;
    string ProblemDescription = 3;
    string ProblemHint        = 4;
    int32 Solved              = 5;
    int32 Submission          = 6;
    string InputDescription   = 7;
    string OutputDescription  = 8;
    string ProblemInput       = 9;
    string ProblemOutput      = 10;
    int32 TimeLimit           = 11;
    int32 MemoryLimit         = 12;
    string Knowledges         = 13;
    int32 Enable              = 14;
    int32 Difficulty          = 15;
    int32 isDone              = 16;
}

message AddProblemReq {
    int32 UserID    = 1;
    Problem problem = 2;
}
