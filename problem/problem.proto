syntax            = "proto3";
option go_package = "github.com/csuJudge/judgeProto/problem";

package oj.problem;

service ProblemServer {
    // QueryProblem 查询题目
    rpc QueryProblem(QueryProblemReq) returns (QueryProblemRsp) {}
    // AddProblem 添加题目
    rpc AddProblem(AddProblemReq) returns (CommonRsp) {}
    // UpdateProblem 更新题目
    rpc UpdateProblem(UpdateProblemReq) returns (CommonRsp) {}
    // UpdateProblemStatus 更新题目状态
    rpc UpdateProblemStatus(UpdateProblemStatusReq) returns (CommonRsp) {}
    // QueryProblemList 查询题目列表
    rpc QueryProblemList(QueryProblemListReq) returns (QueryProblemListRsp) {}
    // QueryAllProblem 查询所有题目列表
    rpc QueryAllProblem(QueryProblemListReq) returns (QueryAllProblemRsp) {}
    // QueryProblemName 查询题目名称
    rpc QueryProblemName(QueryProblemNameReq) returns (QueryAllProblemRsp) {}
    // UpdateProblemVisitNumber 更新题目访问数据
    rpc UpdateProblemVisitNumber(updateProblemVisitNumberReq) returns (CommonRsp) {}
    // QueryProblemDataList 查询题目样例
    rpc QueryProblemDataList(QueryProblemDataListReq) returns (QueryProblemDataListRsp) {}
    // QueryProblemData 查询题目样例数据
    rpc QueryProblemData(QueryProblemDataReq) returns (QueryProblemDataRsp) {}
    // AddProblemData 添加题目样例数据
    rpc AddProblemData(AddProblemDataReq) returns (CommonRsp) {}
    // UpdateProblemData 更新题目样例数据
    rpc UpdateProblemData(UpdateProblemDataReq) returns (CommonRsp) {}
    // DeleteProblemData 删除题目样例数据
    rpc DeleteProblemData(DeleteProblemDataReq) returns (CommonRsp) {}
    // QueryContestProblem 查询作业的题目数据
    rpc QueryContestProblem(QueryContestProblemReq) returns (QueryContestProblemReqRsp) {}
    // QueryCourseProblem 查询课程的题目
    rpc QueryCourseProblem(QueryCourseProblemReq) returns (QueryAllProblemRsp) {}
    // UpdateCourseProblem 更新题目的知识点
    rpc UpdateCourseProblem(UpdateCourseProblemReq) returns (CommonRsp) {}
}

message UpdateCourseProblemReq{
    int32 courseID = 1;  // 课程编号
    int32 userID    = 2;  // 用户编号
    string problemIDs = 3; // 题目编号
}

message QueryCourseProblemReq{
    int32 courseID = 1;  // 课程编号
    int32 userID    = 2;  // 用户编号
}

message UpdateProblemReq {
    int32 problemID          = 1;   // 题目编号
    string name              = 2;   // 题目名称
    string description       = 3;   // 描述
    string hint              = 4;   // 提示
    string inputDescription  = 5;   // 输入描述
    string outputDescription = 6;   // 输出描述
    string input             = 7;   // 样例输入
    string output            = 8;   // 样例输出
    int32 timeLimit          = 9;   // 时间限制
    int32 memoryLimit        = 10;  // 内存限制
    string knowledges        = 11;  // 知识点
    int32 difficulty         = 12;  // 难度
    int32 userID             = 13;  // 用户编号
    int32 type               = 14;  // 题目类型
    string template          = 15;  // 模板
}

message updateProblemVisitNumberReq {
    int32 userID    = 1;  // 用户编号
    int32 problemID = 2;  // 问题编号
}

message QueryProblemNameReq {
    int32 userID = 1;  // 用户编号
    string courseIDs = 2; // 课程编号
}

message QueryProblemListReq {
    int32 page       = 1;  // 页
    int32 limit      = 2;  // 页大小
    int32 userID     = 3;  // 用户编号
    string condition = 4;  // 条件（名称或者编号）
    int32 knowledge = 5;  // 知识点
    string course    = 6;  // 课程
}

message QueryProblemListRsp {
    string message               = 1;  // 返回信息
    int32 code                   = 2;  // 返回码
    repeated ProblemList problem = 3;  // 问题列表
    int32 total                  = 4;  // 总数
}

message QueryContestProblemReq {
    int32 contestID = 1;  // 作业编号
    int32 userID    = 2;  // 用户编号
}

message QueryContestProblemReqRsp {
    string message                   = 1;  // 返回信息
    int32 code                       = 2;  // 返回码
    repeated ContestProblem problems = 3;  //  作业的题目列表
}

message ContestProblem {
    int32 problemID  = 1;  // 题目编号
    string name      = 2;  // 题目名称
    int32 isDone     = 3;  // 是否做完
    int32 solved     = 4;  // 解决
    int32 submission = 5;  // 提交
    int32 difficulty = 6;  // 难度
}

message UpdateProblemStatusReq {
    int32 userID    = 1;  // 用户主键
    int32 problemID = 2;  // 题目主键
    int32 status    = 3;  // 状态
}

message DeleteProblemDataReq {
    int32 problemID   = 1;  // 问题编号
    string sampleName = 2;  // 样例名
    int32 userID      = 3;  // 用户编号
}

message UpdateProblemDataReq {
    int32 problemID   = 1;  // 问题编号
    string sampleName = 2;  // 样例名
    string input      = 3;  // 输入
    string output     = 4;  // 输出
    int32 userID      = 5;  // 用户编号
}

message CommonRsp {
    string message = 1;  // 返回信息
    int32 code     = 2;  // 返回码
}

message AddProblemDataReq {
    int32 problemID = 1;  // 问题编号
    int32 userID    = 2;  // 用户编号
}

message QueryProblemDataReq {
    int32 problemID   = 1;  // 问题编号
    string sampleName = 2;  // 样例名称
    int32 userID      = 3;  // 用户编号
}

message QueryProblemDataRsp {
    string message = 1;  // 返回信息
    int32 code     = 2;  // 返回码
    string input   = 3;  // 输入
    string output  = 4;  // 输出
}

message QueryProblemDataListReq {
    int32 problemID = 1;  // 问题编号
    int32 userID    = 2;  // 用户编号
}

message QueryProblemDataListRsp {
    string message         = 1;  // 返回信息
    int32 code             = 2;  // 返回码
    repeated Sample sample = 3;  // 样例列表
}

message Sample {
    string sampleName   = 1;  // 样例名称
    string sampleInput  = 2;  // 样例输入
    string sampleOutput = 3;  // 样例输出
}

message QueryProblemReq {
    int32 problemID = 1;  // 问题编号
    int32 userID    = 2;  // 用户编号
    int32 contestID = 3;  // 作业编号
}

message QueryProblemRsp {
    string message  = 1;  // 返回信息
    int32 code      = 2;  // 返回码
    Problem problem = 3;  // 问题
}

message ProblemList {
    int32 problemID  = 1;  // 题目编号
    string name      = 2;  // 题目名称
    int32 solved     = 3;  // 解决数
    int32 submission = 4;  // 提交数
    int32 difficulty = 5;  // 难度
    float passRate   = 6;  // 通过率
    int32 isDone     = 7;  // 是否做完
}

message QueryAllProblemRsp {
    string message           = 1;  // 返回信息
    int32 code               = 2;  // 返回码
    repeated Problem problem = 3;  // 问题列表
    int32 total              = 4;  // 总数
}

message Problem {
    int32 problemID          = 1;   // 题目编号
    string name              = 2;   // 题目名称
    string description       = 3;   // 描述
    string hint              = 4;   // 提示
    int32 solved             = 5;   // 解决数
    int32 submission         = 6;   // 提交数
    string inputDescription  = 7;   // 输入描述
    string outputDescription = 8;   // 输出描述
    string input             = 9;   // 样例输入
    string output            = 10;  // 样例输出
    int32 timeLimit          = 11;  // 时间限制
    int32 memoryLimit        = 12;  // 内存限制
    repeated Knowledge knowledges        = 13;  // 知识点
    int32 enable             = 14;  // 状态
    int32 difficulty         = 15;  // 难度
    string creator           = 16;  // 提交者
    string updateTime        = 17;  // 修改时间
    string createdTime       = 18;  // 创建时间
    string updatedBy         = 19;  // 更新者
    int32 type               = 20;  // 题目类型
    string template          = 21;  // 模板
    int32 creatorID = 22; // 用户编号
}

message AddProblemReq {
    int32 userID             = 1;   // 用户编号
    string name              = 2;   // 题目名称
    string description       = 3;   // 描述
    string hint              = 4;   // 提示
    string inputDescription  = 5;   // 输入描述
    string outputDescription = 6;   // 输出描述
    string input             = 7;   // 样例输入
    string output            = 8;   // 样例输出
    int32 timeLimit          = 9;   // 时间限制
    int32 memoryLimit        = 10;  // 内存限制
    string knowledges        = 11;  // 知识点
    int32 difficulty         = 12;  // 难度
    int32 type               = 13;  // 题目类型
    string template          = 14;  // 模板
}

message Knowledge {
    int32 id          = 1;  // 知识点主键
    string name       = 2;  // 知识点名称
    string creator    = 3;  // 创建者
    string createTime = 4;  // 创建时间
    int32 enable      = 5;  // 状态
    int32 weight      = 6;  // 权重
}

service ObjectiveServer {
    // AddObjective 添加客观题
    rpc AddObjective(AddObjectiveReq) returns (CommonRsp) {}
    // UpdateObjective 更新客观题
    rpc UpdateObjective(UpdateObjectiveReq) returns (CommonRsp) {}
    // UpdateObjectiveStatus 更新客观题状态
    rpc UpdateObjectiveStatus(UpdateObjectiveStatusReq) returns (CommonRsp) {}
    // QueryObjective 查询客观题
    rpc QueryObjective(QueryObjectiveReq) returns (QueryObjectiveRsp) {}
    // QueryAllObjective 查询客观题
    rpc QueryAllObjective(QueryObjectiveListReq) returns (QueryObjectiveListRsp) {}
    // QueryObjectiveList 分页查询客观题
    rpc QueryObjectiveList(QueryObjectiveListReq) returns (QueryObjectiveListRsp) {}
    // IsCorrectObjective 是否客观题错误
    rpc IsCorrectObjective(IsCorrectObjectiveReq) returns (IsCorrectObjectiveRsp) {}
}

message QueryObjectiveListRsp {
    string message                = 1;  // 返回信息
    int32 code                    = 2;  // 返回码
    repeated Objective objectives = 3;  // 客观题集合
    int32 total                   = 4;  // 总数
}

message QueryObjectiveListReq {
    int32 userID = 1;  // 用户主键
    int32 page   = 2;  // 页
    int32 limit  = 3;  // 页大小
}

message IsCorrectObjectiveRsp {
    string message = 1;  // 返回信息
    int32 code     = 2;  // 返回码
    int32 isRight  = 3;  // 是否正确
}

message IsCorrectObjectiveReq {
    int32 userID      = 1;  // 用户主键
    int32 objectiveID = 2;  // 客观题主键
    string answer     = 3;  // 答案
}

message QueryObjectiveReq {
    int32 userID      = 1;  // 用户主键
    int32 objectiveID = 2;  // 客观题主键
}

message Option {
    int32 optionID = 1;  // 选项主键
    string content = 2;  // 内容
}

message Objective {
    int32 objectiveID       = 1;   // 客观题主键
    string content          = 2;   // 名称
    string name             = 3;   // 出题人
    string creator          = 4;   // 题目类型
    string answer           = 5;   // 答案
    string updateTime       = 6;   // 更新时间
    string createTime       = 7;   // 创建时间
    int32 enable            = 8;   // 是否可用
    repeated Option options = 9;   // 选项
    int32 objectiveType     = 10;  // 客观题类型
    int32 isRight           = 11;  // 是否做对
}

message QueryObjectiveRsp {
    string message      = 1;  // 返回信息
    int32 code          = 2;  // 返回码
    Objective objective = 3;  // 客观题
}

message AddObjectiveReq {
    string content    = 1;  // 内容
    string name       = 2;  // 名称
    int32 userID      = 3;  // 用户编号
    string answer     = 4;  // 答案
    string options    = 5;  // 选项
    int32 problemType = 6;  // 题目类型
}

message UpdateObjectiveReq {
    int32 objectiveID = 1;  // 客观题主键
    string content    = 2;  // 内容
    string name       = 3;  // 名称
    int32 userID      = 4;  // 用户编号
    string answer     = 5;  // 答案
    string options    = 6;  // 选项
    int32 problemType = 7;  // 题目类型
}

message UpdateObjectiveStatusReq {
    int32 objectiveID = 1;  // 客观题主键
    int32 userID      = 2;  // 用户编号
    int32 status      = 3;  // 状态
}