// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v3.19.1
// source: school.proto

package school

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryUserClassReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int32                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryUserClassReq) Reset() {
	*x = QueryUserClassReq{}
	mi := &file_school_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryUserClassReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserClassReq) ProtoMessage() {}

func (x *QueryUserClassReq) ProtoReflect() protoreflect.Message {
	mi := &file_school_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserClassReq.ProtoReflect.Descriptor instead.
func (*QueryUserClassReq) Descriptor() ([]byte, []int) {
	return file_school_proto_rawDescGZIP(), []int{0}
}

func (x *QueryUserClassReq) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type QueryUserClassRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`     // 返回信息
	Code          int32                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`          // 返回码
	UserClass     string                 `protobuf:"bytes,3,opt,name=userClass,proto3" json:"userClass,omitempty"` // 用户的班级
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryUserClassRsp) Reset() {
	*x = QueryUserClassRsp{}
	mi := &file_school_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryUserClassRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserClassRsp) ProtoMessage() {}

func (x *QueryUserClassRsp) ProtoReflect() protoreflect.Message {
	mi := &file_school_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserClassRsp.ProtoReflect.Descriptor instead.
func (*QueryUserClassRsp) Descriptor() ([]byte, []int) {
	return file_school_proto_rawDescGZIP(), []int{1}
}

func (x *QueryUserClassRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryUserClassRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryUserClassRsp) GetUserClass() string {
	if x != nil {
		return x.UserClass
	}
	return ""
}

type AddTermReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`               // 名称
	UserID        int32                  `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`          // 用户编号
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` // 描述
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTermReq) Reset() {
	*x = AddTermReq{}
	mi := &file_school_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTermReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTermReq) ProtoMessage() {}

func (x *AddTermReq) ProtoReflect() protoreflect.Message {
	mi := &file_school_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTermReq.ProtoReflect.Descriptor instead.
func (*AddTermReq) Descriptor() ([]byte, []int) {
	return file_school_proto_rawDescGZIP(), []int{2}
}

func (x *AddTermReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddTermReq) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *AddTermReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AddCourseReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`               // 名称
	UserID        int32                  `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`          // 用户编号
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` // 描述
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCourseReq) Reset() {
	*x = AddCourseReq{}
	mi := &file_school_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCourseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCourseReq) ProtoMessage() {}

func (x *AddCourseReq) ProtoReflect() protoreflect.Message {
	mi := &file_school_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCourseReq.ProtoReflect.Descriptor instead.
func (*AddCourseReq) Descriptor() ([]byte, []int) {
	return file_school_proto_rawDescGZIP(), []int{3}
}

func (x *AddCourseReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddCourseReq) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *AddCourseReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CommonRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // 返回信息
	Code          int32                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`      // 返回码
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommonRsp) Reset() {
	*x = CommonRsp{}
	mi := &file_school_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommonRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonRsp) ProtoMessage() {}

func (x *CommonRsp) ProtoReflect() protoreflect.Message {
	mi := &file_school_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonRsp.ProtoReflect.Descriptor instead.
func (*CommonRsp) Descriptor() ([]byte, []int) {
	return file_school_proto_rawDescGZIP(), []int{4}
}

func (x *CommonRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommonRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

var File_school_proto protoreflect.FileDescriptor

var file_school_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x6f, 0x6a, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x22, 0x2b, 0x0a, 0x11, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x5f, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x5a, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x54, 0x65,
	0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x5c, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x39, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x32, 0x4c, 0x0a, 0x0c,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x09,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x17, 0x2e, 0x6f, 0x6a, 0x2e, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6f, 0x6a, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x00, 0x32, 0x5d, 0x0a, 0x0b, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x2e, 0x6f, 0x6a,
	0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6f, 0x6a, 0x2e, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x32, 0x46, 0x0a, 0x0a, 0x54, 0x65, 0x72,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x54, 0x65,
	0x72, 0x6d, 0x12, 0x15, 0x2e, 0x6f, 0x6a, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x41,
	0x64, 0x64, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6f, 0x6a, 0x2e, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x73, 0x75, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_school_proto_rawDescOnce sync.Once
	file_school_proto_rawDescData = file_school_proto_rawDesc
)

func file_school_proto_rawDescGZIP() []byte {
	file_school_proto_rawDescOnce.Do(func() {
		file_school_proto_rawDescData = protoimpl.X.CompressGZIP(file_school_proto_rawDescData)
	})
	return file_school_proto_rawDescData
}

var file_school_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_school_proto_goTypes = []any{
	(*QueryUserClassReq)(nil), // 0: oj.school.QueryUserClassReq
	(*QueryUserClassRsp)(nil), // 1: oj.school.QueryUserClassRsp
	(*AddTermReq)(nil),        // 2: oj.school.AddTermReq
	(*AddCourseReq)(nil),      // 3: oj.school.AddCourseReq
	(*CommonRsp)(nil),         // 4: oj.school.CommonRsp
}
var file_school_proto_depIdxs = []int32{
	3, // 0: oj.school.CourseServer.AddCourse:input_type -> oj.school.AddCourseReq
	0, // 1: oj.school.ClassServer.QueryUserClass:input_type -> oj.school.QueryUserClassReq
	2, // 2: oj.school.TermServer.AddTerm:input_type -> oj.school.AddTermReq
	4, // 3: oj.school.CourseServer.AddCourse:output_type -> oj.school.CommonRsp
	1, // 4: oj.school.ClassServer.QueryUserClass:output_type -> oj.school.QueryUserClassRsp
	4, // 5: oj.school.TermServer.AddTerm:output_type -> oj.school.CommonRsp
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_school_proto_init() }
func file_school_proto_init() {
	if File_school_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_school_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_school_proto_goTypes,
		DependencyIndexes: file_school_proto_depIdxs,
		MessageInfos:      file_school_proto_msgTypes,
	}.Build()
	File_school_proto = out.File
	file_school_proto_rawDesc = nil
	file_school_proto_goTypes = nil
	file_school_proto_depIdxs = nil
}
